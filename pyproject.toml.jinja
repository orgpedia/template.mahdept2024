[tool.poetry]
name = "orgpedia-{{org_code}}"
version = "0.0.1"
description = "Datapackage containing orders of {{dept_name}} Government of Maharashtra."
authors = ["Orgpedia Foundation <orgpedia.foundation@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["information extraction", "data package", "government data"]
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Information Analysis',

]

packages = [ { include = "orgpedia_{{org_code}}", from = "export" } ]
include = [ "export/orgpedia_{{org_code}}/*" ]

[tool.poetry.urls]
"homepage" = "https://www.orgpedia.in/"
"repository" = "https://github.com/orgpedia/{{org_code}}"
"data issues" = "https://github.com/orgpedia/{{org_code}}/discussions"

[tool.poetry.dependencies]
python = ">3.8.1 <4.0"

# this is a datapackage should not have any dependency as we are publishing data
# dependencies for running the flow are in group.dev.dependencies


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pdfplumber = "^0.9.0"
requests = "^2.31.0"
pytesseract = "^0.3.10"

docint = {git = "https://github.com/mukundesh/docInt.git"}
ruff = "^0.2.2"
pre-commit = "^2.21.0" 
translateindic = {git = "https://github.com/orgpedia/translateIndic"}
orgpedia = {git = "https://github.com/orgpedia/orgpedia.git"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
lint.select = ["E", "F", "W", "I001"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["I001"] # fix only isort issues
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".nox",
    ".ruff_cache",
    ".tox",
    "__pypackages__",
    "dist",
    "node_modules",
    "venv",
    ".bak",
    "input",
    "output",
    "logs",
    "conf",
    "export",
    "models",
    "documents",
    "data_packages",
    "websites",
    "page_images",
    "html",
]
lint.per-file-ignores = {}

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
#dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"
